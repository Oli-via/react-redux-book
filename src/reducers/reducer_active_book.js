/**
 * Created by aliyy on 2017/1/14.
 */
// every reducer has two arguments, the current state and action.
// reducers are only ever called when the action occurs

// state argument is not application state, only the state this reducer is responsible for
// it means in reducers/index.js, BookReducer(the value in combineReducers) is responsible for creating books(the key) properties
// so the state that get passed as an argument to the BookReducer, is only the state that we previously generated by the BookReducer
// in other words, we have the same state that's been produced by the below reducers is flowing back into it whenever action occurs
export default function (state = null, action) {  //需要初始化state值，因为redux不允许返回undefined，只能返回非undefined的state值
  // 例如如果在这里写：state += 1; 每次action触发的时候，state都会增加1，假设state初始值是0，则每次调用action的时候，state会等于1，2，3……

  switch (action.type) {
    case 'BOOK_SELECTED':
      // 只能return全新的对象作为新的state，不能手动修改state的值，例如state.title=... BAD!!!
      return action.payload;  //即：返回当前选择的book
  }

  return state
}
// 这个reducer需要在reducers/index.js中combine进去





